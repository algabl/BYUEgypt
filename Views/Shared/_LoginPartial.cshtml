@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var currentUser = UserManager.GetUserAsync(User).Result;
}

<ul class="navbar-nav">
    
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-light" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @User.Identity?.Name
            </a>
            <ul class="dropdown-menu bg-primary">
                <li>
                    <a class="dropdown-item text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fa-solid fa-user"></i> Profile</a>
                </li>
                @if (await UserManager.IsInRoleAsync(currentUser, "ADMIN"))
                {
                    <li>
                        <a class="dropdown-item text-light" asp-controller="Admin" asp-action="Users"><i class="fa-solid fa-toolbox"></i> Admin</a>
                    </li>
                }
                <li>
                     <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                         <button type="submit" class="dropdown-item text-light"><i class="fa-solid fa-right-from-bracket"></i> Logout</button>
                     </form>
                 </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login"><i class="fa-solid fa-right-to-bracket"></i> Login</a>
        </li>
    }
</ul>